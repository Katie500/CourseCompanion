@using CourseCompanion.Shared.Model
@using CourseCompanion.Shared.Services
@using CourseCompanion.Shared.State

@inject ICourseService CourseService
@inject StateContainer State

<!--Referenced from:-->
<!--https://www.puresourcecode.com/dotnet/blazor/create-an-accordion-component-with-blazor/-->

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

<div class="collapsible">
    @if (!string.IsNullOrEmpty(Value))
    {
        <div class="value">
            <span class="badge badge-success">@Value</span>
        </div>
    }

    <div class="title" style="font-size=85%">
        @Title

        @if (Collapsed)
        {
            <div class="arrow">
                <span @onclick="@Toggle" class="oi oi-chevron-bottom mr-1" style="padding-right:0.5rem"></span>
            </div>

            <div class="trash-icon" @onclick="DeleteCourse">
                <i class="fa fa-trash" style="padding-left:0.2rem; font-size:1.5rem"></i>
            </div>


        }
        else
        {
            <div class="arrow">
                <span @onclick="@Toggle" class="oi oi-chevron-top mr-1" style="padding-right:0.5rem"></span>
            </div>

            <div class="trash-icon" @onclick="DeleteCourse">
                <i class="fa fa-trash" style="padding-left:0.2rem; font-size:1.5rem"></i>
            </div>


        }
    </div>

    @if (!Collapsed)
    {
        <div class="collapsible-panel" style="@BgColor">
            @ChildContent
        </div>
    }
</div>

@code {
    [Parameter] public RenderFragment? ChildContent { get; set; }
    [Parameter] public bool Collapsed { get; set; }
    [Parameter] public CourseDetails? Course { get; set; }
    [Parameter] public string? Title { get; set; }
    [Parameter] public string? Value { get; set; }
    [Parameter] public string? BgColor { get; set; }
    [Parameter] public bool Semester { get; set; }

    void Toggle()
    {
        Collapsed = !Collapsed;
    }

    // remove the course from the appropriate semester list and place it back into the main list
    private void DeleteCourse()
    {

        Console.WriteLine("removed " + Course.Id + " while in SemesterCards");
        State.RemoveCourse_fromSemesterList(Course);

        Console.WriteLine("re-added " + Course.Id + " to the main list");
        State.AddCourse_toSearchedList(Course);

        // send a notification that lists were changed
        CourseService.CourseEvent(Course);

    }

}