@using Syncfusion.Blazor.Cards
@using Microsoft.AspNetCore.Components
@using CourseCompanion.Shared
@using CourseCompanion.Shared.Model
@using CourseCompanion.Shared.State

@inject HttpClient Http
@inject StateContainer State


<div class="container" style="padding:0; padding-top:0.5rem; padding-bottom:0.5rem">
    <div class="e-card" style="background-color:ghostwhite; border-left:1rem solid @BarColor(@Course.Category)">

        <div class="error-icon" style="visibility:@CheckEligible(Course.Eligible)">
            <i class="fa fa-exclamation"></i>
            <span class="error-message">@ErrorMessage(Course)</span>
        </div>

        <SfCard @key="@Course">
            <div class="e-card-header"> @Course.Id </div>


            <!--Semester Card Content-->
            <CollapsibleSemester Course=@Course Title="@Course.Title" Collapsed="true" BgColor="ghostwhite">
                <div class="card-content" style="background-color:ghostwhite">

                    <p class="p-card-content">
                        <b>Description:</b> @Course.Description<br>
                        <b>Instructor:</b> @Course.Instructor<br>
                        <b>Prerequisite(s):</b> @Course.Prerequisites <br>
                        <b>Antirequisite(s):</b> @Course.Antirequisites<br>
                        <b>Credits:</b> @Course.Credits
                    </p>
                </div>
            </CollapsibleSemester>
        </SfCard>
    </div>
</div>


@code {
    [Parameter]
    public CourseDetails? Course { get; set; }

    private string? BarColor(string category)
    {
        if (category.Contains("Major")) { return "midnightblue"; }
        if (category.Contains("Other")) { return "orchid"; }
        if (category.Contains("Open")) { return "lightgreen"; }
        if (category.Contains("Faculty")) { return "goldenrod"; }
        else { return "antiquewhite"; }
    }

    private string ErrorMessage(CourseDetails course)
    {
        // get a random number from 0, 1, and 2
        Random rnd = new Random();
        int random = rnd.Next(3);

        switch (random)
        {
            case 0:
                return "You are missing the following prerequisite(s): CPSC 231.";
            case 1:
                return "This course conflicts with: CPSC 231.";
            case 2:
                return "This course requires consent of the department.";
            default:
                return "You are ineligible for this course.";
        }

    }

    private string CheckEligible(bool eligible)
    {

        if(!eligible) { return "visible"; }
        else { return "hidden"; }

    }

    }