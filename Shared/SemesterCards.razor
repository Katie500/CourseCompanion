@using Syncfusion.Blazor.Cards
@using Microsoft.AspNetCore.Components
@using CourseCompanion.Shared
@using CourseCompanion.Shared.Model
@using CourseCompanion.Shared.Services

@inject HttpClient Http
@inject ICourseService CourseService

<div class="container" style="padding:0; padding-top:0.5rem; padding-bottom:0.5rem">
    <div class="e-card" style="background-color:ghostwhite; border-left:1rem solid @BarColor(@Course.Category)">

        <div class="error-icon">
            <i class="fa fa-exclamation"> </i>
        </div>

        <SfCard @bind-courseKey="@Course">
            <div class="e-card-header"> @Course.Id </div>

            <CollapsibleSemester Course=@Course Title="@Course.Title" Collapsed="true" BgColor="@CardColor(@Course.Semester)">
                <div class="card-content" style="background-color:@CardColor(@Course.Semester)">

                    <p class="p-card-content">
                        <b>Description:</b> @Course.Description<br>
                        <b>Instructor:</b> @Course.Instructor<br>
                        <b>Prerequisite(s):</b> @Course.Prerequisites <br>
                        <b>Antirequisite(s):</b> @Course.Antirequisites<br>
                        <b>Credits:</b> @Course.Credits
                    </p>
                </div>
            </CollapsibleSemester>
        </SfCard>
    </div>
</div>


@code {
    [Parameter]
    public CourseDetails? Course { get; set; }

    private string? CardColor(string semester)
    {
        if (semester.Contains("Fall")) { return "ghostwhite"; }
        if (semester.Contains("Winter")) { return "ghostwhite"; }
        if (semester.Contains("Spring")) { return "ghostwhite"; }
        if (semester.Contains("Summer")) { return "ghostwhite"; }
        else { return "antiquewhite"; }
    }

    private string? BarColor(string category)
    {
        if (category.Contains("Major")) { return "midnightblue"; }
        if (category.Contains("Other")) { return "orchid"; }
        if (category.Contains("Open")) { return "lightgreen"; }
        if (category.Contains("Faculty")) { return "goldenrod"; }
        else { return "antiquewhite"; }
    }


    protected override void OnInitialized()
    {
        // subscribe to OnCourseEvent
        CourseService.OnCourseEvent += CourseHandler;
    }

    private void CourseHandler(CourseDetails removedCourse)
    {
        StateHasChanged();
    }

    // remove the course from the appropriate lists and place it back into the main list
    private void DeleteCourse()
    {
        CourseService.RemoveCourse(Course);
    }

    /// <summary>
    /// TODO:
    /// fix the icourseservice to send/receive to the right places
    /// ie
    /// plus button: remove from main list, send course to sem
    /// remove button: remove from sem list, send to main list
    /// </summary>
}